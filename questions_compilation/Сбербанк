JAVA CORE:
Q: Что такое Integer pool?
A: Пос смыслу тот же зверь, что и String pool. только хранит в себе цифрЪ от -128 до 127. Т.е. если мы создаем Integer в этом промежутке, то вместо того, чтобы каждый раз создавать новый объект, JVM берет их из пула.

Q: Что такое GC и как эта зверюга работает?
A: Просто наглядно вот тут: https://habr.com/post/112676/ (заодно про Perm/Meta и Heap вспомните )))

Q: Типы ссылок в Java?
A: Классические Strong, Soft (через объект SoftReference) - удаляются GC, когда у нас есть угроза переполнения памяти (применются в кэшах), Weak - похоже на Soft, но GC может придти по их душу в любой момент? Phantom - Если на объект есть только фантомная ссылка, то будет выполнена попытка утилизации данного объекта при сборке мусора. Сам объект при этом не будет удален из памяти до тех пор, пока на него существует фантомная ссылка или данная фантомная ссылка не очищена с помощью вызова метода clear(). Так же стоит заметить, что метод get() фантомной ссылки всегда возвращает null. (о том, когда ни нужны, хорошо сказано тут http://qaru.site/questions/673867/when-to-use-weak-and-phantom-references-in-java) и еще тут :http://samolisov.blogspot.com/2011/09/phantomreferences-java.html )


Q: Методы класса Object?
A: Нет ничего лучше старой-доброй документации : https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html

Q: Зачем нужны equals и hashCode, какие у них есть правила?
A: Вся суть в одном небольшом посте : https://habr.com/post/168195/

Q: Как происходит вставка в HashMap?
A: Вкратце, HashMap состоит из «корзин» (bucket`ов). С технической точки зрения «корзины» — это элементы массива, которые хранят ссылки на списки элементов. При добавлении новой пары ключ-значение, вычисляет хеш-код ключа, на основании которого вычисляется номер корзины (номер ячейки массива), в которую попадет новый элемент. Если корзина пустая, то в нее сохраняется ссылка на вновь добавляемый элемент, если же там уже есть элемент, то происходит последовательный переход по ссылкам между элементами в цепочке, в поисках последнего элемента, от которого и ставится ссылка на вновь добавленный элемент. Если в списке был найден элемент с таким же ключом, то он заменяется.

Q: Что такое ArrayList и LinkedList. Когда нужно использовать ArrayList а когда - LinkedList?
A: Вкраце: ArrayList это список, реализованный на основе массива, а LinkedList — это классический связный список, основанный на объектах с ссылками между ними. 
Подробнее: https://habr.com/post/162017/

Q: Что такое принципы ООП?
A: Абстракция, наследование, инкапсуляция и полиморфизм. А вообще "...фамилия моя — фамилия моя слишком известная, чтобы я её называл!" (С)

Q: Как в Java работает synchronized, проблемы синхронизации?
A: Synchronized позволяет работать с ресурсами в многопотчной среде, выдавая конкретным потокам мьютекс(монитор), чтобы другой поток не могу влезть в синхронизорованный блок, пока там работает его "собрат по опасному бизнесу". Помимо Deadlock, при одновременной работе нескольких потоков, мы можем столкнуться со 
Starvation - поток ждет доступа к занятому ресурсу.
LiveBlock - потоки заняты реагированием на события друг друга, вместо того чтобы заняться делом.
Race - два потока работают с несинхронизированным ресурсом , а мы имеем непредсказуемый результат их работы, т.к. не знаем какой поток отработает с ресурсом первым, а какой - вторым.

Q: Как узнать, что у вас Deadlock, как его избежать?
A: Максимально общий ответ - взглянуть на Thred Dump. При помощи jstack. Сначала нужно узнать id процесса нашей "програмулины" (команда jps -l -m), затем просто вызываем jstack + id процесса и получаем всю нужную информацию о том, какие такие процессы встали в deadlock.
Для профилактики можно использовать интерфейс Lock. Интерфейс Lock и его реализации доступные в пакете java.util.concurrent.locks позволяют попытаться занять монитор, связанный с экземпляром данного класса методом tryLock (возвращает true, если удалось занять монитор).

Q: Что такое mutable и immutable объекты?
A: У Mutable объекта можно изменить состояние после его создания, у immutable объекта нет полей, которые можно изменить ПОСЛЕ создания объекта. Именно поэтому immutable классы приятно юзать как ключи в HashMap, их гораздо удобнее применять в "многопоточке" и т.п.

SPRING
Q: Что такое IoC?
A: Доступным языком, что откуда вылезло: http://nikcode.blogspot.com/2011/09/spring-inversion-of-control.html

Q: С какими модулями Спринга вы сталкивались?
A: Вкраце : https://easyjava.ru/spring/

Q: Нюансы работы аннотации @Transactional?
A: Попроще: https://easyjava.ru/spring/spring-data-access/izolyaciya-i-rasprostranenie-tranzakcij-v-spring/
Чуть более развернуто : http://akorsa.ru/2016/08/kak-na-samom-dele-rabotaet-transactional-spring/

Q: Как в Спринге инициализируетсся объект?
Q: Как можно конфигурировать бины в Спринге?
A: Нет ничего лучше старого доброго Хабра...https://habr.com/post/222579/


Q: Назовите скоупы (scope) бинов в Спринге?
A: Обратимся к Сулейманову : https://proselyte.net/tutorials/spring-tutorial-full-version/bean-scope/

HIBERNATE

Q: Что такое Hibernate Criteria?
A: Интерфейс org.hibernate.Criteria представляет собой объектно-ориентированный запрос на выборку в отношении конкретной сущности и позволяет выполнять запросы в БД без написания SQL кода. http://javastudy.ru/hibernate/hibernate-criteria-examples/

Q: Что такое проблема n+1?
A: Вкраце, выкачивание из БД всех связанных с нашей Entity сущностей (внутри объекта есть коллекция других объектов), причем не одним SELECT-ом, а целым сомном (по 1 SELECT на каждую сущность из коллекции , отсюда из название проблемы). Как решить проблему: https://www.javacodegeeks.com/2018/04/jpa-tips-avoiding-the-n-1-select-problem.html

Q: В каких состояниях может пребывать Entity в Hibernate?
A: https://habr.com/post/271115/ , заодно вспомним про сессии и транзакции

Q: Какой класс в Hibernate следит за состоянием объектов?
A: Entity Manager

ТЕСТИРОВАНИЕ:

Q: Что такое интеграционные тесты?
Q: Что такое инфраструктурные тесты, API тесты?
Q: Какие виды тестирования вы знаете?
A: https://articles.javatalks.ru/articles/4

Q: Зачем нужен Selenium?
A: Для тестирования UI (главным образом JSP). Подробнее : https://habr.com/post/152971/

Q: Что такое мокирование и как оно работает?
A: http://java-online.ru/junit-mockito.xhtml

ПРОЧЕЕ
Q: Что такое CGI?
A: CGI (от англ. Common Gateway Interface — «общий интерфейс шлюза») — стандарт интерфейса, используемого для связи внешней программы с веб-сервером. Программу, которая работает по такому интерфейсу совместно с веб-сервером, принято называть шлюзом, хотя многие предпочитают названия «скрипт» (сценарий) или «CGI-программа».https://lectureswww.readthedocs.io/5.web.server/cgi.html

Q: Виды UML диаграмм?
A: https://habr.com/post/74330/

Q: Как работает Git, чем отличается Push, Pull, Merge?
A: Посложнее: https://habr.com/post/313890/ Попроще: https://habr.com/post/342116/ Вообще про все : https://git-scm.com/book/ru/v2

Q: Что такое Chery Pick?
A: Команда git cherry-pick используется для того чтобы взять изменения, внесённые каким-либо коммитом, и попытаться применить их заново в виде нового коммита наверху текущей ветки. Это может оказаться полезным чтобы забрать парочку коммитов из другой ветки без полного слияния с той веткой.